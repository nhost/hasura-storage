---
name: Build containers

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      CACHIX_AUTH_TOKEN:
        required: true

env:
  CONTAINER_NAME: nhost/hasura-storage

jobs:
  docker-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        platform: [x86_64, aarch64]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: nixbuild/nix-quick-install-action@v28
      with:
        nix_version: 2.20.5
        nix_conf: |
          experimental-features = nix-command flakes
          sandbox = false

    - name: Cache nix store
      uses: actions/cache@v4
      with:
        path: /nix
        key: nix-build-${{ matrix.platform }}-${{ hashFiles('**/*.nix') }}

    - uses: cachix/cachix-action@v15
      with:
        name: hasura-storage
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - uses: docker/setup-qemu-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: "Build docker image"
      run: |
        export VERSION=$(make get-version)
        nix-build \
          --option system ${{ matrix.platform }}-linux \
          --extra-platforms ${{ matrix.platform }}-linux \
          -A packages.${{ matrix.platform }}-linux.dockerImage
        docker load < result
        docker tag hasura-storage:$VERSION $CONTAINER_NAME:$VERSION-${{ matrix.platform }}
        docker push $CONTAINER_NAME:$VERSION-${{ matrix.platform }}
        docker inspect $CONTAINER_NAME:$VERSION-${{ matrix.platform }}

  docker-manifest:
    needs: docker-image

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - run: |
          export VERSION=$(make get-version)
          docker manifest create \
              $CONTAINER_NAME:$VERSION \
              --amend $CONTAINER_NAME:$VERSION-x86_64 \
              --amend $CONTAINER_NAME:$VERSION-aarch64
          docker manifest push $CONTAINER_NAME:$VERSION
